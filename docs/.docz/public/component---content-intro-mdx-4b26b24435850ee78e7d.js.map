{"version":3,"sources":["webpack:///../content/intro.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ocAMO,IAAMA,EAAe,Q,kKAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,cADR,eAGA,mEACA,iBAAQ,CACN,GAAM,OADR,QAGA,+NAGA,+CACA,sBACE,kBAAIC,WAAW,MAAf,2DAAgF,0BAAYA,WAAW,MAAvB,gBAChF,kBAAIA,WAAW,MAAf,8GAEA,kBAAIA,WAAW,MAAf,mJAEF,iBAAQ,CACN,GAAM,gBADR,gBAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,8BAIL,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,sZAUL,iBAAQ,CACN,GAAM,sBADR,sBAGA,oFACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,yH,yJAWTJ,EAAWK,gBAAiB","file":"component---content-intro-mdx-4b26b24435850ee78e7d.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/alejandromesasuarez/Winterfell/_Hooks/jam3-hooks/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"whats-this\"\n    }}>{`What's this`}</h1>\n    <p>{`Collection of hooks that we re-use at Jam3`}</p>\n    <h1 {...{\n      \"id\": \"why\"\n    }}>{`Why?`}</h1>\n    <p>{`Since the React landscape is changing with the introduction of hooks\nand the \"deprecation\" of classes is useful for us to keep a collection\nof hooks so we can share functionality between projects.`}</p>\n    <p>{`You could face 3 cases`}</p>\n    <ol>\n      <li parentName=\"ol\">{`The functionality that you need is already here so just `}<inlineCode parentName=\"li\">{`npm install`}</inlineCode></li>\n      <li parentName=\"ol\">{`There is some missing functionality so you want to make the hook\ndynamic to multiple cases well open a PR`}</li>\n      <li parentName=\"ol\">{`Your use case is too specific, just copy and paste the hook and adapt it these way at least you're not starting from 0 and with best practices`}</li>\n    </ol>\n    <h1 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm i @jam3/react-hooks\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// Import depending what you need it will tree-shake the modules\nimport { useIntersectionObserver } from \"@jam3/react-hooks\";\nimport { useMousePosition } from \"@jam3/react-hooks\";\nimport { useScrollDirection } from \"@jam3/react-hooks\";\nimport { useScrollProgress } from \"@jam3/react-hooks\";\nimport { useScrollToTop } from \"@jam3/react-hooks\";\nimport { useWindowSize } from \"@jam3/react-hooks\";\n`}</code></pre>\n    <h1 {...{\n      \"id\": \"contribution-guide\"\n    }}>{`Contribution Guide`}</h1>\n    <p>{`Add detailed steps and improve the workflow to make it easy`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`git clone <repo>\nnpm install && npm start;\ncd example && npm install && npm start\ncd example && npm start-docz\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}