{"version":3,"sources":["webpack:///../content/UseIntersectionObserver/use-intersection-observer.jsx","webpack:///../content/UseIntersectionObserver/use-intersectino-observer.mdx"],"names":["IntersectionObserver","containerRef","useRef","isIntersecting","useIntersectionObserver","rootMargin","triggerOnce","containerRef2","isIntersecting2","style","height","display","ref","transition","backgroundColor","marginTop","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","parentName","isMDXComponent"],"mappings":"8LAGMA,EAAuB,WAC3B,IAAMC,EAAeC,iBAAO,MACtBC,EAAiBC,YAAwBH,EAAc,CAAEI,WAAY,SAAUC,aAAa,IAE5FC,EAAgBL,iBAAO,MACvBM,EAAkBJ,YAAwBG,EAAe,CAAEF,WAAY,WAE7E,OACE,8BACE,mBAAKI,MAAO,CAAEC,OAAQ,UAAtB,eACA,oBAAMD,MAAO,CAAEE,QAAS,UAAxB,iDACA,oBAAMF,MAAO,CAAEE,QAAS,UAAxB,6BACA,mBACEC,IAAKX,EACLQ,MAAO,CAAEC,OAAQ,QAASG,WAAY,sCAAuCC,gBAAiBX,EAAiB,cAAgB,YAE9HA,EAAiB,cAAgB,WAGpC,oBAAMM,MAAO,CAAEM,UAAW,QAASJ,QAAS,UAA5C,iDACA,oBAAMF,MAAO,CAAEE,QAAS,UAAxB,mBACA,mBACEC,IAAKL,EACLE,MAAO,CAAEC,OAAQ,QAASG,WAAY,sCAAuCC,gBAAiBN,EAAkB,cAAgB,YAE/HA,EAAkB,cAAgB,aAK5BR,I,mfCzBR,IAAMgB,EAAe,Q,8MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,6BADR,6BAGA,yCACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,2BAA4BC,QAAS,CACtEJ,QACAH,kBACAQ,eACA3B,wBACCuB,QAAQ,cACb,YAAC,EAAD,CAAsBA,QAAQ,0BAE5B,uBAAK,sBAAMK,WAAW,OAAU,CAC5B,UAAa,iBADZ,25B,qMAgCTR,EAAWS,gBAAiB","file":"component---content-use-intersection-observer-use-intersectino-observer-mdx-1f2859b7b15fc353ab2d.js","sourcesContent":["import React, { useRef } from \"react\";\nimport { useIntersectionObserver } from \"@jam3/react-hooks\";\n\nconst IntersectionObserver = () => {\n  const containerRef = useRef(null);\n  const isIntersecting = useIntersectionObserver(containerRef, { rootMargin: \"-200px\", triggerOnce: false });\n\n  const containerRef2 = useRef(null);\n  const isIntersecting2 = useIntersectionObserver(containerRef2, { rootMargin: \"-200px\" });\n\n  return (\n    <>\n      <div style={{ height: \"100vh\" }}>White Space</div>\n      <span style={{ display: \"block\" }}>Watching intersect using -200px of rootMargin</span>\n      <span style={{ display: \"block\" }}>Triggering multiple times</span>\n      <div\n        ref={containerRef}\n        style={{ height: \"300px\", transition: \"background-color 0.5s ease-out 0.5s\", backgroundColor: isIntersecting ? \"springgreen\" : \"crimson\" }}\n      >\n        {isIntersecting ? \"Intersected\" : \"Not Yet\"}\n      </div>\n\n      <span style={{ marginTop: \"400px\", display: \"block\" }}>Watching intersect using -200px of rootMargin</span>\n      <span style={{ display: \"block\" }}>Triggering once</span>\n      <div\n        ref={containerRef2}\n        style={{ height: \"300px\", transition: \"background-color 0.5s ease-out 0.5s\", backgroundColor: isIntersecting2 ? \"springgreen\" : \"crimson\" }}\n      >\n        {isIntersecting2 ? \"Intersected\" : \"Not Yet\"}\n      </div>\n    </>\n  );\n};\nexport default IntersectionObserver;\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/alejandromesasuarez/Winterfell/_Hooks/jam3-hooks/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport IntersectionObserver from \"./use-intersection-observer\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"use-intersection-observer\"\n    }}>{`use-intersection-observer`}</h1>\n    <p>{`Hook Description`}</p>\n    <Playground __position={0} __code={'<IntersectionObserver />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      IntersectionObserver\n    }} mdxType=\"Playground\">\n  <IntersectionObserver mdxType=\"IntersectionObserver\" />\n    </Playground>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React, { useRef } from \"react\";\nimport { useIntersectionObserver } from \"@jam3/react-hooks\";\n\nconst IntersectionObserver = () => {\n  const containerRef = useRef(null);\n  const isIntersecting = useIntersectionObserver(containerRef, { rootMargin: \"-200px\" });\n\n  const containerRef2 = useRef(null);\n  const isIntersecting2 = useIntersectionObserver(containerRef, { rootMargin: \"-200px\", triggerOnce: false });\n\n  return (\n    <>\n      <div>White Space</div>\n\n      <span>Watching intersect using -200px of rootMargin</span>\n      <span>Triggering multiple times</span>\n      <div ref={containerRef2}>{isIntersecting2 ? \"Intersected\" : \"Not Yet\"}</div>\n\n      <span>Watching intersect using -200px of rootMargin</span>\n      <span>Triggering once</span>\n      <div ref={containerRef}>{isIntersecting ? \"Intersected\" : \"Not Yet\"}</div>\n    </>\n  );\n};\nexport default IntersectionObserver;\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}